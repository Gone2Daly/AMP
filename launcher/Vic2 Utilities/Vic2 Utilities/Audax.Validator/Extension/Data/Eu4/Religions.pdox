(Validator Religion) = {
	Type = GroupValidator
	FriendlyName = "Religion"
	
	Validator = {
		Type = Default
		(FileGroup "common\religions" "*.txt")
		ValidatorName = ReligionFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\hre_reforms" "*.txt")
		ValidatorName = HreFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\personal_deities" "*.txt")
		ValidatorName = PersonalDeityFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\church_aspects" "*.txt")
		ValidatorName = ChurchAspectsFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\religious_reforms" "*.txt")
		ValidatorName = ReligiousReformsFile
	}
}

(Type ReligionFile) = {
	(Ch N N) = { Left = { Type = String } Right = ReligionGroupDef (CheckKey "*" Left IfNot = NoCheckKey) UniqueId = Left }
}

(Type ReligionGroupDef) = {
	Optional = { Left = "defender_of_faith" Right = Bool }
	Optional = { Left = "crusade_name" Right = Key }
	Optional = { Left = "can_form_personal_unions" Right = Bool }
	Optional = { Left = "center_of_religion" Right = LandProvince }
	Optional = { Left = "flags_with_emblem_percentage" Right = Int }
	Optional = { Left = "flag_emblem_index_range" Right = { (PdoList N 2 2) = { Type = Int } } }

	(Ch N N) = { Left = { Type = String } Right = ReligionDef UniqueId = Left (CheckKey "*" Left IfNot = NoCheckKey) }

}

(Type ReligionDef) = {
	Single = { Left = "color" Right = FloatColor }
	Single = { Left = "icon" Right = { IconRef = "GFX_religion_icon_strip" } }
	
	Optional = { Left = "allowed_conversion" Right = { (PdoList Y) = { Type = Religion } } }
	Optional = { Left = "allowed_center_conversion" Right = { (PdoList Y) = { Type = Religion } } }
	Optional = { Left = "doom" Right = Bool }
	Optional = { Left = "authority" Right = Bool }
	Optional = { Left = "declare_war_in_regency" Right = Bool }
	Optional = { Left = "religious_reforms" Right = Bool }
	Optional = { Left = "reform_tooltip" Right = Key }
	Optional = { Left = "annex" Right = Bool }
	Optional = { Left = "uses_piety" Right = Bool }
	Optional = { Left = "has_patriarchs" Right = Bool }
	Optional = { Left = "misguided_heretic" Right = Bool }
	Optional = { Left = "personal_deity" Right = Bool }
	Optional = { Left = "uses_church_power" Right = Bool }
	Optional = { Left = "uses_karma" Right = Bool }
	Optional = { Left = "aspects" Right = { (PdoList Y) = { Type = ChurchAspect } } }
	Optional = { Left = "fervor" Right = Bool }
	Optional = { Left = "hre_religion" Right = Bool }
	Optional = { Left = "hre_heretic_religion" Right = Bool }
	Optional = { Left = "heretic" Right = { (PdoList Y) = { Type = Key } } }
	Optional = { Left = "on_convert" Right = CountryCommand }
	Optional = { Left = "country" Right = CountryModifierDef }
	Optional = { Left = "country_as_secondary" Right = CountryModifierDef }
	Optional = { Left = "province" Right = ProvinceModifierDef }
	Optional = { Left = "date" Right = Date }
	Optional = { Left = "will_get_center" Right = CountryTrigger }
	Optional = { Left = "flags_with_emblem_percentage" Right = Int }
	Optional = { Left = "flag_emblem_index_range" Right = { (PdoList N 2 2) = { Type = Int } } }
	Optional = { Left = "can_have_secondary_religion" Right = Bool }
	
	Optional = { Left = "papacy" Right = {
		Single = { Left = "papal_tag" Right = Tag }
		Single = { Left = "election_cost" Right = Int }
		Single = { Left = "seat_of_papacy" Right = LandProvince }
		(Ch Y N) = {
			Left = { Type = String }
		(CheckKey "*" Left IfNot = NoCheckKey)
			Right = {
				Single = { Left = "cost" Right = Double }
				Single = { Left = "potential" Right = CountryTrigger }
				Single = { Left = "allow" Right = CountryTrigger }
				Single = { Left = "effect" Right = CountryCommand }
				Single = { Left = "ai_will_do" Right = AiWillDo }

			}
		}
	} }

}

(Type PersonalDeityFile) = {
	(Ch N N) = { Left = { Type = String } Right = PersonalDeityDef UniqueId = Left }
}

(Type PersonalDeityDef) = {
	(CheckKey "*" Left IfNot = NoCheckKey)
	(CheckKey "*_desc" Left IfNot = NoCheckKey)
	
	Single = { Left = "allow" Right = CountryTrigger }
	Single = { Left = "ai_will_do" Right = AiWillDo }
	Single = { Left = "sprite" Right = { IconRef = "GFX_hindu_deities_strip" } }
	
	Inherits = CountryModifierDef
}

(Type AiWillDo) = {
	Optional = { Left = "factor" Right = NnDbl }
	(Ch N Y) = { Left = "modifier" Right = Modifier }
}

(Type Modifier) = {
	Inherits = FactorModifier
	Optional = { Left = "factor" Right = NnDbl }
	
	Inherits = CountryTrigger
}

(Type ChurchAspectsFile) = {
	(Ch N N) = {
		Left = { Type = String }
		Right = ChurchAspectDef
		(CheckKey "*" Left IfNot = NoCheckKey)
		(CheckKey "desc_*" Left IfNot = NoCheckKey)
		UniqueId = Left
	}
}

(Type ChurchAspectDef) = {
	Single = { Left = "effect" Right = CountryModifierDef }
	Single = { Left = "ai_will_do" Right = AiWillDo }
}

(Type ReligiousReformsFile) = {
	(Ch N N) = {
		Left = { Type = String }
		Right = ReligiousReformGroupDef
		(CheckKey "*" Left IfNot = NoCheckKey)
		UniqueId = Left
	}
}

(Type ReligiousReformGroupDef) = {
	Single = { Left = "trigger" Right = CountryTrigger }
	Single = { Left = "can_buy_idea" Right = CountryTrigger }
	Single = { Left = "ai_will_do" Right = AiWillDo }
	
	(Ch N N) = {
		Left = { Type = String }
		Right = ReligiousReformDef
		(CheckKey "*" Left IfNot = NoCheckKey)
		(CheckKey "*_desc" Left IfNot = NoCheckKey)
		UniqueId = Left
	}
}

(Type ReligiousReformDef) = {
	Inherits = CountryModifierDef
}
